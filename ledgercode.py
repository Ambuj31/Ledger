# -*- coding: utf-8 -*-
"""LedgerCode.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XN2oAq48WH0u4e08F-qyK5nYH0jU8gAH
"""

!pip install PyPDF2

import pandas
import numpy
import PyPDF2
import csv
from PyPDF2 import PdfReader

def read_pdf_and_save_to_csv(pdf_path, csv_path):
    # Open the PDF file
    with open(pdf_path, 'rb') as pdf_file:
        # Create a PDF reader objectt65
        pdf_reader = PdfReader(pdf_file)

        # Get the number of pages in the PDF
        num_pages = len(pdf_reader.pages)

        # Initialize a CSV writer
        with open(csv_path, 'w', newline='', encoding='utf-8') as csv_file:
            csv_writer = csv.writer(csv_file)

            # Loop through all pages in the PDF
            for page_num in range(num_pages):
                # Extract text from the current page
                page = pdf_reader.pages[page_num]
                text = page.extract_text()

                # Split the text into lines
                lines = text.split('\n')

                # Write each line to the CSV file
                for line in lines:
                    # You may need to customize the delimiter based on the actual structure of your PDF
                    csv_writer.writerow([line])

if __name__ == "__main__":
    # Replace 'input.pdf' and 'output.csv' with your actual file names
    read_pdf_and_save_to_csv('/content/input.pdf', 'output.csv')

import csv
import re

def extract_data_from_csv(csv_path):
    with open(csv_path, 'rb', newline='', encoding='utf-8') as csv_file:
        csv_reader = csv.reader(csv_file)

        # Initialize variables to store extracted data
        found_cgpa_section = False
        extracted_data = []

        # Define the regex pattern for the delimiter "...."
        delimiter_pattern = re.compile(r'\.{4,}')



        for row in csv_reader:
            # Check if the row contains the CGPA section pattern
            if re.search(r'TOTAL CREDITS EARNED : \d+ TOTAL GRADE POINTS EARNED : \d+ FINAL CGPA : [\d.]+', ' '.join(row)):
                found_cgpa_section = True
                print(found_cgpa_section)
                continue

            # Check if the row contains the delimiter "...." using the regex pattern
            if delimiter_pattern.search(' '.join(row)):
                # If CGPA section was found, append the extracted data to the result
                if found_cgpa_section:
                    break  # Exit the loop after finding the next delimiter
                else:
                    continue  # Skip rows until CGPA section is found

            # Append the row to the extracted data if CGPA section has been found
            if found_cgpa_section:
              print(row)
              extracted_data.append(row)

        return extracted_data

if __name__ == "__main__":
    # Replace 'input.csv' with your actual file name
    csv_path = '/content/input.csv'

    # Extract data based on the specified conditions
    extracted_data = extract_data_from_csv(csv_path)

    # Print the extracted data
    for row in extracted_data:
        print(' '.join(row))

import csv
import re

def extract_data_and_write_to_csv(input_csv_path, output_csv_path):
    with open(input_csv_path, 'r', newline='', encoding='utf-8') as csv_file:
        csv_reader = csv.reader(csv_file)

        # Initialize variables to store extracted data
        found_cgpa_section = False
        extracted_data = []

        # Define the regex pattern for the delimiter "...."
        delimiter_pattern = re.compile(r'\.{4,}')

        for row in csv_reader:
            print(row)
            # Check if the row contains the CGPA section pattern
            if re.search(r'TOTAL CREDITS EARNED : \d+ TOTAL GRADE POINTS EARNED : \d+ FINAL CGPA : [\d.]+', ' '.join(row)):
                found_cgpa_section = True
                print(found_cgpa_section)
                continue

            # Check if the row contains the delimiter "...." using the regex pattern
            if delimiter_pattern.search(' '.join(row)):
                # If CGPA section was found, append the extracted data to the result
                if found_cgpa_section:
                    break  # Exit the loop after finding the next delimiter
                else:
                    continue  # Skip rows until CGPA section is found

            # Append the row to the extracted data if CGPA section has been found
            if found_cgpa_section:
              extracted_data.append([row[0]]) # Store only in the A column
              print(extracted_data)

    # Write the extracted data to a new CSV file
    with open(output_csv_path, 'w', newline='', encoding='utf-8') as output_csv:
        csv_writer = csv.writer(output_csv)
        csv_writer.writerows(extracted_data)

if __name__ == "__main__":
    # Replace 'input.csv' and 'output.csv' with your actual file names
    input_csv_path = '/content/input.csv'
    output_csv_path = 'output.csv'

    # Extract data and write to a new CSV file
    extract_data_and_write_to_csv(input_csv_path, output_csv_path)

